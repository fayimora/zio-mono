services:
  - type: web
    name: api
    env: docker
    dockerfilePath: ./apps/api/Dockerfile
    dockerContext: .
    repo: https://github.com/fayimora/zio-mono
    region: frankfurt
    plan: starter
    branch: renderio
    healthCheckPath: /
    scaling:
      minInstances: 1
      maxInstances: 3
      targetMemoryPercent: 80 # optional if targetCPUPercent is set (valid: 1-90)
      targetCPUPercent: 80 # optional if targetMemory is set (valid: 1-90)
    envVars:
      - key: REDIS_HOST
        fromService:
          type: redis
          name: zio-mono-redis
          property: host # available properties are listed below
      - key: REDIS_PORT
        fromService:
          type: redis
          name: zio-mono-redis
          property: port
  - type: worker
    name: worker1
    plan: starter
    region: frankfurt
    env: docker
    dockerfilePath: ./apps/worker1/Dockerfile
    dockerContext: .
    branch: renderio
  - type: worker
    name: worker2
    plan: starter
    region: frankfurt
    env: docker
    dockerfilePath: ./apps/worker2/Dockerfile
    dockerContext: .
    branch: renderio
  - type: redis
    name: zio-mono-redis
    ipAllowList: # required
      - source: 0.0.0.0/0
        description: everywhere
    plan: free
    maxmemoryPolicy: noeviction # optional (defaults to allkeys-lru)

databases:
  - name: zio-mono-pg
    databaseName: zio-mono-db # (Render may add a suffix)
    user: zio-mono
